-- Criar GUI
local screenGui = Instance.new("ScreenGui")
local spamButton = Instance.new("TextButton")
local uICorner = Instance.new("UICorner")
local uIStroke = Instance.new("UIStroke")

screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Configurar o botão de spam
spamButton.Parent = screenGui
spamButton.Size = UDim2.new(0, 50, 0, 25) -- Tamanho do botão
spamButton.Position = UDim2.new(0.5, -50, 0.5, -25) -- Centro da tela
spamButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Cor preta
spamButton.BackgroundTransparency = 0.3 -- 30% de transparência
spamButton.Text = "Spam" -- Texto do botão
spamButton.TextColor3 = Color3.new(1, 1, 1) -- Cor do texto (branca)
spamButton.Font = Enum.Font.SourceSansBold
spamButton.TextScaled = true
spamButton.TextStrokeTransparency = 0.5
spamButton.TextStrokeColor3 = Color3.new(0, 0, 0)

-- Bordas arredondadas
uICorner.CornerRadius = UDim.new(0, 15)
uICorner.Parent = spamButton

-- Borda externa
uIStroke.Parent = spamButton
uIStroke.Thickness = 3
uIStroke.Color = Color3.fromRGB(255, 255, 255) -- Cor branca
uIStroke.Transparency = 0.2

local runService = game:GetService("RunService")
local virtualInputManager = game:GetService("VirtualInputManager")
local spamming = false
local dragging = false
local dragInput = nil
local dragStart = nil
local startPos = nil

-- Função para ativar/desativar spam
spamButton.MouseButton1Click:Connect(function()
    spamming = not spamming
    spamButton.Text = spamming and "Parar" or "Spam"

    if spamming then
        runService:BindToRenderStep("SpamClick", Enum.RenderPriority.Input.Value, function()
            virtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
            virtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, game)
        end)
    else
        runService:UnbindFromRenderStep("SpamClick")
    end
end)

-- Funções para permitir mover o botão
local function update(input)
    local delta = input.Position - dragStart
    spamButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

spamButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = spamButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

spamButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- Parar a função de spam quando o personagem morrer
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

humanoid.Died:Connect(function()
    spamming = false
    spamButton.Text = "Spam"
    runService:UnbindFromRenderStep("SpamClick")
end)

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")

    humanoid.Died:Connect(function()
        spamming = false
        spamButton.Text = "Spam"
        runService:UnbindFromRenderStep("SpamClick")
    end)
end)
